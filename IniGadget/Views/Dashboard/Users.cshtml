@model IEnumerable<UserViewModel>

@{
    Layout = "_DashboardLayout";
    int i = 0;
}

@section ModalSection {
    <!-- Modal Edit -->
    @Html.Partial("Modal/_UpdateUser", new UserModel());

    <!-- Modal Hapus -->
    <div class="modal fade" id="DeleteDataModal" tabindex="-1" aria-labelledby="DeleteModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content p-3">
                <div class="modal-body" id="delMsg"></div>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Batal</button>
                    <form asp-controller="User" asp-action="Delete" method="post">
                        <input id="inputID" type="hidden" value="" name="id" />
                        <button type="submit" class="btn btn-primary">Hapus</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<div class="container-fluid">
    <div>
        <h3>Pengguna</h3>
    </div>

    <div class="card">
        <div class="card-body">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th scope="col">No</th>
                        <th scope="col">Nama</th>
                        <th scope="col">Email</th>
                        <th scope="col">Role</th>
                        <th scope="col">Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in Model)
                    {
                        <tr>
                            <th scope="row">@(i + 1)</th>
                            <td>@u.Name</td>
                            <td>@u.Email</td>
                            <td>@u.Role</td>
                            <td>
                                <div class="d-flex">
                                    <button class="btn btn-warning text-white me-2 edit-btn" data-bs-toggle="modal" data-bs-target="#EditDataModal"
                                        data-id="@u.Id"
                                        data-name="@u.Name"
                                        data-email="@u.Email"
                                        data-role="@u.Role"
                                    >
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen-icon lucide-square-pen"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" /><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z" /></svg>
                                    </button>
                                    <button class="btn btn-danger text-white delete-btn" data-bs-toggle="modal" data-bs-target="#DeleteDataModal" data-email="@u.Email" data-id="@u.Id">                                  
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2"><path d="M10 11v6" /><path d="M14 11v6" /><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6" /><path d="M3 6h18" /><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" /></svg>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        i++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const editBtn = document.querySelectorAll(".edit-btn");
            const delBtn = document.querySelectorAll(".delete-btn");
            const delForm = document.getElementById("deleteForm");
            const editId = document.getElementById("EditId");
            const submitEditBtn = document.getElementById("EditButton");

            submitEditBtn.addEventListener("click", async () => {
                // Kirim data ke endpoint API
                const id = document.getElementById("EditId").value;
                const name = document.getElementById("EditName").value;
                const email = document.getElementById("EditEmail").value
                const role = document.querySelector(".EditRole:checked").value;

                // Kosongkan pesan error
                document.getElementById("errorName").textContent = "";
                document.getElementById("errorEmail").textContent = "";
                document.getElementById("errorRole").textContent = "";

                fetch("/users/update", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        Id: id,
                        Name: name,
                        Email: email,
                        Role: Number(role)
                    })
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log("Sukses: ", data);
                    window.location.reload()
                })
                .catch(error => {
                    console.log("Error: ", error);
                    if (error.Name && error.Name.length > 0) {
                        document.getElementById("errorName").textContent = error.Name[0];
                    } if (error.Email && error.Email.length > 0){
                        document.getElementById("errorEmail").textContent = error.Email[0];
                    } if (error.Role && error.Role.length > 0) {
                        document.getElementById("errorRole").textContent = error.Role[0];
                    }
                })
            });

            delBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    const id = btn.dataset.id;
                    const email = btn.dataset.email;
                    const delMsg = document.getElementById("delMsg");
                    const delIdInput = document.getElementById("inputID");
                    delIdInput.value = id;
                    
                    delMsg.innerHTML = "Apakah anda yakin ingin menghapus akun <b>" + email + "<b/> ?"
                })
            });



            editBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    const id = btn.dataset.id
                    const name = btn.dataset.name
                    const email = btn.dataset.email
                    const role = btn.dataset.role

                    console.log("Nama: ", name)
                    console.log("Email: ", email)
                    console.log("Role: ", role)

                    editId.value = id;

                    const formName = document.getElementById("EditName");
                    const formEmail = document.getElementById("EditEmail");

                    formName.value = name;
                    formEmail.value = email;

                    const userRole = document.getElementById("role1");
                    const sellerRole = document.getElementById("role2");
                    const adminRole = document.getElementById("role3");

                    if (role === "User") {
                        userRole.checked = true;
                    } else if (role === "Seller") {
                        sellerRole.checked = true;
                    } else {
                        adminRole.checked = true;
                    }
                });
            });


        })
    </script>
}