@model IEnumerable<CategoryModel>
@{
    Layout = "_DashboardLayout";
    int i = 1;
}

@section ModalSection {
    <!-- Add Modal -->
    <div class="modal fade" id="AddCategoryModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="AddCategoryForm">
                    <div class="modal-header">
                        <h5 class="modal-title">Tambah Kategori Baru</h5>
                        <button type="button" class="btn btn-close" aria-label="Close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body p-4">
                        <div>
                            <label for="name" class="form-label">Nama Kategori</label>
                            <input class="form-control" type="text" name="Name" id="name" value="" />
                            <span id="errorAddName" class="text-danger"></span>
                        </div>
                        <div class="mt-2">
                            <label class="form-label">Upload Gambar</label>
                            <input class="form-control" type="file" name="ImageFile" value="" />
                            <span id="errorAddImg" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                        <button type="submit" class="btn btn-primary">Tambah</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" aria-hidden="true" id="EditCategoryModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="editCategoryForm">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Data Kategori</h5>
                        <button type="button" class="btn btn-close" aria-label="Close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body p-4">
                        <div>
                            <label for="name" class="form-label">Nama Kategori</label>
                            <input class="form-control" type="text" name="Name" id="editName" value="" />
                            <span class="text-danger" id="errorEditName"></span>
                        </div>
                        <div class="mt-2">
                            <label class="form-label">Upload Gambar</label>
                            <input class="form-control" type="file" name="ImageFile" value="" id="editImg" />
                            <span class="text-danger" id="errorEditImg"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                        <button class="btn btn-primary">Tambah</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Modal -->
    <div class="modal fade" id="DeleteCategoryModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content p-4">
                <p class="" id="delMsg"></p>
                <div class="d-flex justify-content-end w-100">
                    <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Batal</button>
                    <form id="DeleteCategoryForm">
                        <button type="submit" class="btn btn-danger">Lanjut</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<div class="container-fluid">
    <h3>Tambah kategori</h3>
    <div class="card">
        <div class="card-body">
            <div class="mb-3">
                <button data-bs-toggle="modal" data-bs-target="#AddCategoryModal" class="btn btn-primary ">
                    Tambah data
                </button>
            </div>

            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Gambar</th>
                        <th>Nama Kategori</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in Model)
                    {
                        <tr>
                            <td>@(i++)</td>
                            <td>
                                <div class="category-card"
                                     style="background-image: url('/images/categories/@c.IconName');
                                        background-size: cover;
                                        background-position: center;
                                        width: 70px;
                                        height: 70px;
                                        border-radius: 10px;
                                        border: 2px solid rgba(0, 0, 0, 0.1);
                                        ">
                                </div>
                            </td>
                            <td>@c.Name</td>
                            <td>
                                <div class="d-flex">
                                    <button class="btn btn-warning text-white me-2 edit-btn" data-bs-toggle="modal" data-bs-target="#EditCategoryModal" data-name="@c.Name" data-iconImg="@c.IconName" data-id="@c.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen-icon lucide-square-pen"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" /><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z" /></svg>
                                    </button>
                                    <button class="btn btn-danger text-white del-btn" data-bs-toggle="modal" data-bs-target="#DeleteCategoryModal" data-name="@c.Name" data-id="@c.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2"><path d="M10 11v6" /><path d="M14 11v6" /><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6" /><path d="M3 6h18" /><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" /></svg>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const editBtn = document.querySelectorAll(".edit-btn");
            const delBtn = document.querySelectorAll(".del-btn");
            const addCategoryForm = document.getElementById("AddCategoryForm");
            const editCategoryForm = document.getElementById("editCategoryForm");
            const deleteCategoryForm = document.getElementById("DeleteCategoryForm");
            let IdToUpdate = "";
            let IdToDelete = "";

            addCategoryForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                // bersihkan pesan error
                document.getElementById("errorAddName").textContent = "";
                document.getElementById("errorAddImg").textContent = "";

                const form = e.target;
                const formData = new FormData(form);

                fetch("/category/create", {
                    method: "POST",
                    body: formData
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.log(error);
                    if (error.Name && error.Name.length > 0) {
                        document.getElementById("errorAddName").textContent = error.Name[0];
                    } if (error.ImageFile && error.ImageFile.length > 0) {
                        document.getElementById("errorAddImg").textContent = error.ImageFile[0];
                    }
                })
            });

            editCategoryForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                // bersihkan pesan error
                document.getElementById("errorEditName").textContent = "";
                document.getElementById("errorEditImg").textContent = "";

                const form = e.target;
                const formData = new FormData(form);

                fetch(`/category/update/${IdToUpdate}`, {
                    method: "PUT",
                    body: formData
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.log(error);
                    if (error.Name && error.Name.length > 0) {
                        document.getElementById("errorEditName").textContent = error.Name[0];
                    } if (error.ImageFile && error.ImageFile.length > 0) {
                        document.getElementById("errorEditImg").textContent = error.ImageFile[0];
                    }
                })
            });

            deleteCategoryForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                fetch(`/category/delete/${IdToDelete}`, {
                    method: "DELETE"
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.log(error);
                })
            })

            editBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    IdToUpdate = btn.dataset.id;
                    console.log("Id yang di update: ", IdToUpdate)
                    const name = btn.dataset.name;
                    const iconImg = btn.dataset.iconImg;

                    const editNameForm = document.getElementById("editName");
                    editNameForm.value = name;
                });
            });

            delBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    IdToDelete = btn.dataset.id;
                    console.log("Id yang akan dihapus: ". IdToDelete);
                    const name = btn.dataset.name;
                    const delMsg = document.getElementById("delMsg");
                    delMsg.innerHTML = "Anda yakin ingin menghapus kategori <b>" + name + "</b> ?"
                })
            })
        });
    </script>
}