@model ProductCategoryList
@{
    Layout = "_DashboardLayout";
}

@section ModalSection {
    <!--Tambah Produk-->
    <div class="modal fade" id="AddProductModal" data-bs-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <form id="AddProductForm"method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Tambah Produk</h5>
                        <button class="btn btn-close" type="button" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" style="max-height: 70vh; overflow-y: auto">
                        <div>
                            <label class="form-label">Nama Produk</label>
                            <input class="form-control" name="Name" type="text" placeholder="Masukkan nama produk"/>
                            <span class="text-danger" id="errorName"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Kategori Produk</label>
                            <select class="form-select" name="CategoryId">
                                <option value="" selected>Pilih kategori</option>
                                @foreach(var c in Model.Categories)
                                {
                                    <option value="@c.Id">@c.Name</option>
                                }
                            </select>
                            <span class="text-danger" id="errorCategory"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Harga</label>
                            <input class="form-control" type="number" min="0" name="Price"/>
                            <span class="text-danger" id="errorPrice"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Stok</label>
                            <div class="d-flex">
                                <button class="btn btn-primary me-2" type="button">-</button>
                                <input class="form-control" style="width: 70px" type="text" name="Stock" value="0" />
                                <button class="btn btn-primary ms-2" type="button">+</button>
                            </div>
                            <span class="text-danger" id="errorStock"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Deskripsi Produk</label>
                            <textarea name="Description" class="form-control" style="height: 200px"></textarea>
                            <span class="text-danger" id="errorDesc"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Gambar Produk</label>
                            <input class="form-control" name="ImageFile" type="file" />
                            <span class="text-danger" id="errorImg"></span>
                        </div>
                    
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary me-3" type="button" data-bs-dismiss="modal">
                            Batal
                        </button>
                        <button class="btn btn-primary">
                            Tambah
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!--Edit Modal-->
    <div class="modal fade" id="EditProductModal" data-bs-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <form id="EditProductForm"method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Data Produk</h5>
                        <button class="btn btn-close" type="button" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" style="max-height: 70vh; overflow-y: auto">
                        <div>
                            <label class="form-label">Nama Produk</label>
                            <input class="form-control" name="Name" id="Name" type="text" placeholder="Masukkan nama produk" />
                            <span class="text-danger" id="errorEditName"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Kategori Produk</label>
                            <select class="form-select" name="CategoryId" id="CategoryId">
                                @foreach(var c in Model.Categories)
                                {
                                    <option value="@c.Id">@c.Name</option>
                                }
                            </select>
                            <span class="text-danger" id="errorEditCategory"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Harga</label>
                            <input class="form-control" type="number" min="0" name="Price" id="Price" />
                            <span class="text-danger" id="errorEditPrice"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Stok</label>
                            <div class="d-flex">
                                <button class="btn btn-primary me-2" type="button">-</button>
                                <input class="form-control" style="width: 70px" type="text" name="Stock" id="Stock" value="0" />
                                <button class="btn btn-primary ms-2" type="button">+</button>
                            </div>
                            <span class="text-danger" id="errorEditStock"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Deskripsi Produk</label>
                            <textarea name="Description" id="Description" class="form-control" style="height: 200px"></textarea>
                            <span class="text-danger" id="errorEditDesc"></span>
                        </div>
                        <div class="mt-3">
                            <label class="form-label">Gambar Produk</label>
                            <input class="form-control" name="ImageFile" id="ImageFile" type="file" />
                            <span class="text-danger" id="errorEditImg"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary me-3" type="button" data-bs-dismiss="modal">
                            Batal
                        </button>
                        <button class="btn btn-primary">
                            Tambah
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!--Delete Modal-->
    <div class="modal fade" id="DeleteProductModal" data-bs-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content p-3">
                <form id="DeleteProductForm">
                    <p id="delMsg"></p>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-secondary me-3" type="button" data-bs-dismiss="modal">
                            Batal
                        </button>
                        <button class="btn btn-danger" type="submit">
                            Hapus
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<div class="container-fluid">
    <h3>Produk</h3>

    <div class="card">
        <div class="card-body">
            <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#AddProductModal">
                Tambah data
            </button>
            <div class="table-responsive">
                <table class="table align-middle">
                    <thead>
                        <tr>
                            <th scope="col">No</th>
                            <th scope="col">Gambar</th>
                            <th scope="col">Nama</th>
                            <th scope="col">Harga</th>
                            <th scope="col">Stok</th>
                            <th scope="col">Kategori</th>
                            <th scope="col">Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var p in Model.Products)
                        {
                        
                            <tr>
                                <td>1</td>
                                <td>
                                    <img src="/images/products/@p.ImagePath" alt="Product Image" class="img-thumbnail" style="width: 70px" />
                                </td>
                                <td>@p.Name</td>
                                <td>@p.Price</td>
                                <td>@p.Stock</td>
                                <td>@p.Category.Name</td>
                                <td>
                                    <div class="d-flex">
                                        <button class="btn btn-warning text-white me-2 edit-btn" data-bs-toggle="modal" data-bs-target="#EditProductModal" data-id="@p.Id" data-name="@p.Name" data-category="@p.CategoryId" data-img="@p.ImagePath" data-price="@p.Price" data-stock="@p.Stock" data-desc="@p.Description">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen-icon lucide-square-pen"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" /><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z" /></svg>
                                        </button>
                                        <button class="btn btn-danger text-white del-btn" data-bs-toggle="modal" data-bs-target="#DeleteProductModal" data-name="@p.Name" data-id="@p.Id">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2"><path d="M10 11v6" /><path d="M14 11v6" /><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6" /><path d="M3 6h18" /><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" /></svg>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const editBtn = document.querySelectorAll(".edit-btn");
            const delBtn = document.querySelectorAll(".del-btn");
            const AddProductForm = document.getElementById("AddProductForm");
            const EditProductForm = document.getElementById("EditProductForm");
            const DeleteProductForm = document.getElementById("DeleteProductForm")
            let idToUpdate = "";
            let idToDelete = "";

            editBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    idToUpdate = btn.dataset.id;
                    console.log(idToUpdate)

                    document.getElementById("Name").value = btn.dataset.name;
                    document.getElementById("CategoryId").value = btn.dataset.category;
                    document.getElementById("Price").value = btn.dataset.price;
                    document.getElementById("Stock").value = btn.dataset.stock;
                    document.getElementById("Description").value = btn.dataset.desc;
                    console.log(btn.dataset.desc)
                })
            })

            delBtn.forEach(btn => {
                btn.addEventListener("click", () => {
                    idToDelete = btn.dataset.id;
                    console.log(idToDelete)
                    document.getElementById("delMsg").innerHTML = `Apakah anda yakin menghapus produk <b>${btn.dataset.name}</b> ?`;
                })
            });

            AddProductForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                const form = e.target;
                const formData = new FormData(form);

                document.getElementById("errorName").textContent = "";
                document.getElementById("errorCategory").textContent = "";
                document.getElementById("errorDesc").textContent = "";
                document.getElementById("errorImg").textContent = "";
                document.getElementById("errorStock").textContent = "";
                document.getElementById("errorPrice").textContent = "";

                fetch(`/product`, {
                    method: "POST",
                    body: formData
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.log(error);
                    if (error.Name && error.Name.length > 0) {
                        document.getElementById("errorName").textContent = error.Name[0];
                    } if (error.CategoryId && error.CategoryId.length > 0) {
                        document.getElementById("errorCategory").textContent = error.CategoryId[0];
                    } if (error.Description && error.Description.length > 0) {
                        document.getElementById("errorDesc").textContent = error.Description[0];
                    } if (error.ImageFile && error.ImageFile.length > 0) {
                        document.getElementById("errorImg").textContent = error.ImageFile[0];
                    } if (error.Stock && error.Stock.length > 0) {
                        document.getElementById("errorStock").textContent = error.Stock[0];
                    } if (error.Price && error.Price.length > 0) {
                        document.getElementById("errorPrice").textContent = error.Price[0];
                    }
                })
            });

            EditProductForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                const form = e.target;
                const formData = new FormData(form);

                document.getElementById("errorEditName").textContent = "";
                document.getElementById("errorEditCategory").textContent = "";
                document.getElementById("errorEditDesc").textContent = "";
                document.getElementById("errorEditImg").textContent = "";
                document.getElementById("errorEditStock").textContent = "";
                document.getElementById("errorEditPrice").textContent = "";

                fetch(`/product/${idToUpdate}`, {
                    method: "PUT",
                    body: formData
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.log(error);
                    if (error.Name && error.Name.length > 0) {
                        document.getElementById("errorEditName").textContent = error.Name[0];
                    } if (error.CategoryId && error.CategoryId.length > 0) {
                        document.getElementById("errorEditCategory").textContent = error.CategoryId[0];
                    } if (error.Description && error.Description.length > 0) {
                        document.getElementById("errorEditDesc").textContent = error.Description[0];
                    } if (error.ImageFile && error.ImageFile.length > 0) {
                        document.getElementById("errorEditImg").textContent = error.ImageFile[0];
                    } if (error.Stock && error.Stock.length > 0) {
                        document.getElementById("errorEditStock").textContent = error.Stock[0];
                    } if (error.Price && error.Price.length > 0) {
                        document.getElementById("errorEditPrice").textContent = error.Price[0];
                    }
                })
            });

            DeleteProductForm.addEventListener("submit", async (e) => {
                e.preventDefault();

                fetch(`/product/${idToDelete}`, {
                    method: "DELETE",
                })
                .then(async response => {
                    if (!response.ok){
                        const error = await response.json();
                        throw error;
                    }

                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    window.location.reload()
                })
                .catch(error => {
                    console.log(error);
                })
            })
        });
    </script>
}